document.addEventListener("DOMContentLoaded", () => {
  const btn = document.getElementById("analyze-btn");
  const statusLine = document.getElementById("status-line");
  const resultBox = document.getElementById("analysis-result");
  const resultText = document.getElementById("result-text");
  const fileInput = document.getElementById("resume-file");
  const fileLabel = document.getElementById("resume-label");

  // –ü—Ä–∏ –≤—ã–±–æ—Ä–µ —Ñ–∞–π–ª–∞ –æ–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏
  fileInput.addEventListener("change", () => {
    if (fileInput.files.length > 0) {
      let fileName = fileInput.files[0].name;
      if (fileName.length > 25) fileName = fileName.substring(0, 22) + "...";
      fileLabel.textContent = "üìÑ " + fileName;
      fileLabel.classList.remove("from-blue-500", "to-blue-700");
      fileLabel.classList.add("from-green-500", "to-green-700");
    } else {
      fileLabel.textContent = "üìé –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª";
      fileLabel.classList.remove("from-green-500", "to-green-700");
      fileLabel.classList.add("from-blue-500", "to-blue-700");
    }
  });

  // –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö
  btn.addEventListener("click", async () => {
    const vacancy = document.getElementById("vacancy-desc").value;
    const resumeFile = document.getElementById("resume-file").files[0];
    const cover = document.getElementById("cover-letter").value;

    if (!vacancy || !resumeFile) {
      alert("–ù—É–∂–Ω–æ –∑–∞–ø–æ–ª–Ω–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ –≤–∞–∫–∞–Ω—Å–∏–∏ –∏ –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ä–µ–∑—é–º–µ!");
      return;
    }

    const formData = new FormData();
    formData.append("vacancy", vacancy);
    formData.append("resume", resumeFile);
    if (cover) formData.append("cover", cover);

    // –ó–∞–≥—Ä—É–∑–∫–∞ ‚Üí –∑–µ–ª—ë–Ω—ã–π
    statusLine.className = "mt-4 h-2 rounded bg-gradient-to-r from-green-400 via-green-500 to-green-600 animate-pulse";
    statusLine.classList.remove("hidden");

    try {
      const resp = await fetch("/api/analyze_resume/", { method: "POST", body: formData });
      const data = await resp.json();

      // –û—Ç–≤–µ—Ç ‚Üí —Å–∏–Ω–∏–π
      statusLine.className = "mt-4 h-2 rounded bg-gradient-to-r from-blue-400 via-blue-500 to-blue-600 animate-pulse";
      setTimeout(() => statusLine.classList.add("hidden"), 1500);

      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–ª–∞–≤–Ω–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç
      resultText.textContent = data.result || "‚ö†Ô∏è –û—à–∏–±–∫–∞: –Ω–µ—Ç –æ—Ç–≤–µ—Ç–∞ –æ—Ç –º–æ–¥–µ–ª–∏";
      resultBox.classList.remove("opacity-0");
      resultBox.classList.add("opacity-100");
    } catch (err) {
      resultText.textContent = "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –¥–∞–Ω–Ω—ã—Ö: " + err;
      resultBox.classList.remove("opacity-0");
      resultBox.classList.add("opacity-100");
    }
  });
});
